#include "commands.hpp"

std::string GetCommandName(uint16_t CommandId)
{
    switch(CommandId)
    {
        case 0x10:
            return "AcCmdCLRoomList";
        case 0x2bb:
            return "AcCmdCRPasswordAuthOK";
        case 0x2bc:
            return "AcCmdCRPasswordAuthCancel";
        case 0x4bf:
            return "AcCmdLCPartyStateNotify";
        case 0x9:
            return "AcCmdCLLoginCancel";
        case 0x14:
            return "AcCmdCLMakeRoomOK";
        case 0x15:
            return "AcCmdCLMakeRoomCancel";
        case 0x1d:
            return "AcCmdCLEnterRoomOK";
        case 0x1e:
            return "AcCmdCLEnterRoomCancel";
        case 0x26:
            return "AcCmdCLLeaveRoomOK";
        case 0x4b9:
            return "AcCmdLCLeavePartyRoom";
        case 0x2c:
            return "AcCmdCLEnterChannelOK";
        case 0x2d:
            return "AcCmdCLEnterChannelCancel";
        case 0x2f:
            return "AcCmdCLLeaveChannelOK";
        case 0x14c:
            return "AcCmdCLDisconnectClientsNotify";
        case 0x6b:
            return "AcCmdCLCreateNicknameNotify";
        case 0x6e:
            return "AcCmdCLCreateNicknameCancel";
        case 0x80:
            return "AcCmdCLShowInventoryCancel";
        case 0x92:
            return "AcCmdCLUpdateUserSettingsOK";
        case 0x93:
            return "AcCmdCLUpdateUserSettingsCancel";
        case 0x97:
            return "AcCmdCLEnterRoomQuickCancel";
        case 0xb4:
            return "AcCmdCLGoodsShopListOK";
        case 0xb5:
            return "AcCmdCLGoodsShopListCancel";
        case 0xef:
            return "AcCmdLCAchievementRewardNotify";
        case 0xfe:
            return "AcCmdCLEnterRanchOK";
        case 0xff:
            return "AcCmdCLEnterRanchCancel";
        case 0x101:
            return "AcCmdCLLeaveRanchOK";
        case 0x102:
            return "AcCmdCLLeaveRanchCancel";
        case 0xe06:
            return "AcCmdLCMessengerCommandInvocation";
        case 0x123:
            return "AcCmdLCGameguardCheckQuery";
        case 0x125:
            return "AcCmdLCGameguardEventNotify";
        case 0x144:
            return "AcCmdCLAchievementCompleteOK";
        case 0x145:
            return "AcCmdCLAchievementCompleteCancel";
        case 0x163:
            return "AcCmdCLGetMessengerInfoOK";
        case 0x164:
            return "AcCmdCLGetMessengerInfoCancel";
        case 0x198:
            return "AcCmdCLCheckWaitingSeqnoOK";
        case 0x1bd:
            return "AcCmdCLEnterRoomQuickStopOK";
        case 0x1be:
            return "AcCmdCLEnterRoomQuickStopCancel";
        case 0x1c2:
            return "AcCmdCLEnterRoomQuickSuccess";
        case 0x36c:
            return "AcCmdCLEnterGuildPartyCancel";
        case 0x372:
            return "AcCmdCLLeaveGuildPartyOK";
        case 0x373:
            return "AcCmdCLLeaveGuildPartyNotify";
        case 0x377:
            return "AcCmdCLStartGuildPartyMatchOK";
        case 0x378:
            return "AcCmdCLStartGuildPartyMatchCancel";
        case 0x37d:
            return "AcCmdCLStopGuildPartyMatchOK";
        case 0x37e:
            return "AcCmdCLStopGuildPartyMatchCancel";
        case 0x383:
            return "AcCmdLCGuildPartyMatchFound";
        case 0x3b5:
            return "AcCmdLCGuildMatchAvailable";
        case 0x3b8:
            return "AcCmdCLChangeGuildPartyOptionsCancel";
        case 0x228:
            return "AcCmdCLQueryServerTimeOK";
        case 0x108:
            return "AcCmdLCMissionRecordUpdate";
        case 0x24f:
            return "AcCmdLCOpKick";
        case 0x250:
            return "AcCmdLCHackShieldRequest";
        case 0x252:
            return "AcCmdLCHackShieldResult";
        case 0x26a:
            return "AcCmdLCGoodsShopListData";
        case 0x26c:
            return "AcCmdCLInquiryTreecashOK";
        case 0x26d:
            return "AcCmdCLInquiryTreecashCancel";
        case 0x257:
            return "AcCmdLCAlertGiftbox";
        case 0x2d1:
            return "AcCmdLCPTSPremiumInfo";
        case 0x2e5:
            return "AcCmdLCOpMute";
        case 0x321:
            return "AcCmdCLRequestLeagueInfoCancel";
        case 0x16f:
            return "AcCmdCLCheckAccountDBAuthOK";
        case 0x170:
            return "AcCmdCLCheckAccountDBAuthCancel";
        case 0x414:
            return "AcCmdCLEnterTownOK";
        case 0x415:
            return "AcCmdCLEnterTownCancel";
        case 0x433:
            return "AcCmdCLShowEggListCancel";
        case 0x4ca:
            return "AcCmdCLShowCharListCancel";
        case 0x43f:
            return "AcCmdCLShowMountListCancel";
        case 0x476:
            return "AcCmdCLRequestCharEquipmentListCancel";
        case 0x47c:
            return "AcCmdCLRequestMountEquipmentListCancel";
        case 0x482:
            return "AcCmdCLMakePartyCancel";
        case 0x487:
            return "AcCmdCLInvitePartyOK";
        case 0x488:
            return "AcCmdCLInvitePartyCancel";
        case 0x498:
            return "AcCmdCLEnterPartyCancel";
        case 0x49e:
            return "AcCmdCLLeavePartyOK";
        case 0x49f:
            return "AcCmdCLLeavePartyCancel";
        case 0x4a0:
            return "AcCmdLCLeavePartyNotify";
        case 0x48f:
            return "AcCmdCLWithDrawPartyMemberOK";
        case 0x490:
            return "AcCmdCLWithDrawPartyMemberCancel";
        case 0x495:
            return "AcCmdLCWithDrawPartyMember";
        case 0x4a5:
            return "AcCmdCLCheckPartyReadyOK";
        case 0x4a6:
            return "AcCmdCLCheckPartyReadyCancel";
        case 0x4aa:
            return "AcCmdLCCheckPartyReady";
        case 0x4ac:
            return "AcCmdCLUpdatePartyMemberStateOK";
        case 0x4ad:
            return "AcCmdCLUpdatePartyMemberStateCancel";
        case 0x4b2:
            return "AcCmdLCPartyMemberStateNotify";
        case 0x4b4:
            return "AcCmdLCPartyMemberScoreNotify";
        case 0x4bb:
            return "AcCmdLCMakeGuildParty";
        case 0x4bd:
            return "AcCmdLCLeaveGuildParty";
        case 0x4c2:
            return "AcCmdCLUpdatePartyChattingInfoOK";
        case 0x4c3:
            return "AcCmdCLUpdatePartyChattingInfoCancel";
        case 0x4c6:
            return "AcCmdLCUpdatePartyChattingInfoNotify";
        case 0x52c:
            return "AcCmdCLRequestLicenseInfoCancel";
        case 0x12:
            return "AcCmdCLHeartbeat";
        case 0x197:
            return "AcCmdCLCheckWaitingSeqno";
        case 0x2b:
            return "AcCmdCLEnterChannel";
        case 0x2e:
            return "AcCmdCLLeaveChannel";
        case 0x25:
            return "AcCmdCLLeaveRoom";
        case 0x48d:
            return "AcCmdLCInvitePartyJoin";
        case 0x1c:
            return "AcCmdCLEnterRoom";
        case 0x4b6:
            return "AcCmdLCEnterPartyRoom";
        case 0x39:
            return "AcCmdLCNotice";
        case 0x36d:
            return "AcCmdCLEnterGuildPartyNotify";
        case 0x300:
            return "AcCmdCLRequestDailyQuestListOK";
        case 0x39f:
            return "AcCmdCLRequestQuestListOK";
        case 0x3be:
            return "AcCmdCLRequestSpecialEventListOK";
        case 0x499:
            return "AcCmdLCEnterPartyNotify";
        case 0x119:
            return "AcCmdCLFeatureCommand";
        case 0x147:
            return "AcCmdCRAchievementUpdateProperty";
        case 0x7:
            return "AcCmdCLLogin";
        case 0xe7:
            return "AcCmdCLAchievementCompleteListOK";
        case 0x19d:
            return "AcCmdLCUpdateSystemContent";
        case 0x3b7:
            return "AcCmdCLChangeGuildPartyOptionsOK";
        case 0x3b9:
            return "AcCmdCLChangeGuildPartyOptionsNotify";
        case 0x28c:
            return "AcCmdLCInviteGuildJoin";
        case 0x233:
            return "AcCmdCLRequestMountInfoOK";
        case 0x2c8:
            return "AcCmdCLChangeRanchOptionOK";
        case 0x2c9:
            return "AcCmdCLChangeRanchOptionCancel";
        case 0x320:
            return "AcCmdCLRequestLeagueInfoOK";
        case 0x4c9:
            return "AcCmdCLShowCharListOK";
        case 0x475:
            return "AcCmdCLRequestCharEquipmentListOK";
        case 0x47b:
            return "AcCmdCLRequestMountEquipmentListOK";
        case 0x52b:
            return "AcCmdCLRequestLicenseInfoOK";
        case 0x8:
            return "AcCmdCLLoginOK";
        case 0x7f:
            return "AcCmdCLShowInventoryOK";
        case 0xed:
            return "AcCmdLCPersonalInfo";
        case 0x432:
            return "AcCmdCLShowEggListOK";
        case 0x1f2:
            return "AcCmdLCSkillCardPresetList";
        case 0x36b:
            return "AcCmdCLEnterGuildPartyOK";
        case 0x11:
            return "AcCmdCLRoomListOK";
        case 0x43e:
            return "AcCmdCLShowMountListOK";
        case 0x481:
            return "AcCmdCLMakePartyOK";
        case 0x497:
            return "AcCmdCLEnterPartyOK";
        case 0x369:
            return "AcCmdCLGuildPartyListOK";
        case 0x2c5:
            return "AcCmdRCLeaveRoom";
        case 0x42c:
            return "AcCmdCRAddAIPlayerCancel";
        case 0x42f:
            return "AcCmdCRRemoveAIPlayerCancel";
        case 0xa7:
            return "AcCmdRCAddSkillEffect";
        case 0xbf:
            return "AcCmdRCMobMove";
        case 0x226:
            return "AcCmdCRUpdateRanchLevelNotify";
        case 0x2b1:
            return "AcCmdCRRelay";
        case 0x59:
            return "AcCmdCRReadyRaceNotify";
        case 0x5c:
            return "AcCmdCRStartRaceCancel";
        case 0x5d:
            return "AcCmdCRChangeMasterNotify";
        case 0x1025:
            return "AcCmdUserRaceTimerOK";
        case 0x108e:
            return "AcCmdBrokerTest";
        case 0x102d:
            return "AcCmdUserRaceCountdown";
        case 0x1036:
            return "AcCmdUserRaceDeleteNotify";
        case 0x1045:
            return "AcCmdGameRaceItemSpawn";
        case 0x1048:
            return "AcCmdGameRaceItemGet";
        case 0x104b:
            return "AcCmdGameQuestItemSpawn";
        case 0x104c:
            return "AcCmdGameQuestItemGet";
        case 0x10a0:
            return "AcCmdUserRaceActivateEventNotify";
        case 0x10a1:
            return "AcCmdUserRaceActivateInteractiveEventNotify";
        case 0x10a2:
            return "AcCmdUserRaceDeactivateEventNotify";
        case 0x1037:
            return "AcCmdUserRaceFinalNotify";
        case 0x33:
            return "AcCmdCREnterRoomCancel";
        case 0x35:
            return "AcCmdCRLeaveRoomNotify";
        case 0x36:
            return "AcCmdCRLeaveRoomOK";
        case 0x4a:
            return "AcCmdRCNPCSpawn";
        case 0x4c:
            return "AcCmdCRAttackNPCNotify";
        case 0x50:
            return "AcCmdCRNPCAttachNotify";
        case 0x51:
            return "AcCmdRCNPCDestroyed";
        case 0x5f:
            return "AcCmdCRKickNotify";
        case 0x8b:
            return "AcCmdCRChangeTeamOK";
        case 0x8c:
            return "AcCmdCRChangeTeamCancel";
        case 0x8d:
            return "AcCmdCRChangeTeamNotify";
        case 0x95:
            return "AcCmdCRRequestItemOK";
        case 0xb7:
            return "AcCmdCRRequestMagicItemOK";
        case 0xb8:
            return "AcCmdCRRequestMagicItemNotify";
        case 0x11d:
            return "AcCmdRCRagePointNotify";
        case 0x9d:
            return "AcCmdCRStarPointGetOK";
        case 0xa5:
            return "AcCmdCRUseItemSlotCancel";
        case 0xbb:
            return "AcCmdCRUseMagicItemCancel";
        case 0x121:
            return "AcCmdRCRevengeTargetNotify";
        case 0xa8:
            return "AcCmdRCRemoveSkillEffect";
        case 0xac:
            return "AcCmdCRChangeUserSlotOK";
        case 0xad:
            return "AcCmdCRChangeUserSlotCancel";
        case 0xae:
            return "AcCmdCRChangeUserSlotNotify";
        case 0xaf:
            return "AcCmdRCAddMonster";
        case 0xb0:
            return "AcCmdRCBindMonster";
        case 0x64:
            return "AcCmdCRAttackMonsterNotify";
        case 0xbd:
            return "AcCmdRCTeamSpurGauge";
        case 0xc0:
            return "AcCmdRCMobTrace";
        case 0xc1:
            return "AcCmdRCMobLookAt";
        case 0xc2:
            return "AcCmdRCMobSetScale";
        case 0xc3:
            return "AcCmdRCMobSetState";
        case 0xc4:
            return "AcCmdRCMobSetHP";
        case 0xc5:
            return "AcCmdRCMobDetachPart";
        case 0xc6:
            return "AcCmdRCMobSetMoveType";
        case 0xc7:
            return "AcCmdRCMobDead";
        case 0xc8:
            return "AcCmdRCMobUseSkillToGround";
        case 0xc9:
            return "AcCmdRCMobUseSkillToObject";
        case 0x11b:
            return "AcCmdRCMobMovingAttack";
        case 0xcc:
            return "AcCmdRCMobLead";
        case 0xcd:
            return "AcCmdRCMobSetHPBySkill";
        case 0xcf:
            return "AcCmdRCActivateLevelDevice";
        case 0xd0:
            return "AcCmdRCActivateLevelDeviceTrigger";
        case 0xd1:
            return "AcCmdRCDeactivateLevelDeviceTrigger";
        case 0xd4:
            return "AcCmdRCMobPlayerDamaged";
        case 0xd5:
            return "AcCmdRCMobPlayerSkillDamaged";
        case 0xd6:
            return "AcCmdRCMobEndGame";
        case 0xd7:
            return "AcCmdCRMobAttackMobNotify";
        case 0xd8:
            return "AcCmdCRMobSkillToMobNotify";
        case 0xdb:
            return "AcCmdRCMobPlayerStatus";
        case 0xdc:
            return "AcCmdRCMobPlayerSetHP";
        case 0xde:
            return "AcCmdRCMobSetHPMax";
        case 0xdf:
            return "AcCmdRCMobStop";
        case 0xe0:
            return "AcCmdRCMobResetPos";
        case 0xe1:
            return "AcCmdRCMissionEvent";
        case 0xeb:
            return "AcCmdRCLevelDeviceAction";
        case 0xe2:
            return "AcCmdRCCreateItem";
        case 0xf2:
            return "AcCmdRCMobKnockback";
        case 0xf3:
            return "AcCmdRCMobSetVelocity";
        case 0xf4:
            return "AcCmdRCCreateObstacle";
        case 0xf5:
            return "AcCmdRCMobAttachPart";
        case 0xf6:
            return "AcCmdRCMobRemoveStatus";
        case 0xf7:
            return "AcCmdRCMobTargetingOn";
        case 0xf8:
            return "AcCmdRCMobTargetingOff";
        case 0xfa:
            return "AcCmdRCMobUnlink";
        case 0xfb:
            return "AcCmdRCMobGazeAt";
        case 0xfc:
            return "AcCmdRCMobPlayerSetMP";
        case 0x106:
            return "AcCmdRCMobPlayerDead";
        case 0x109:
            return "AcCmdRCMobRun";
        case 0x10d:
            return "AcCmdRCMobThrust";
        case 0xda:
            return "AcCmdRCMobPlayerReflectSkill";
        case 0x118:
            return "AcCmdRCMobSetDefaultState";
        case 0x11e:
            return "AcCmdRCAlert";
        case 0xe9:
            return "AcCmdCRHurdleClearResultOK";
        case 0x9b:
            return "AcCmdCRRequestSpurOK";
        case 0x1030:
            return "AcCmdUserRaceCloseWait";
        case 0x158:
            return "AcCmdRCAchievementCompleteNotify";
        case 0x161:
            return "AcCmdRCKickFromRace";
        case 0x191:
            return "AcCmdCRAwardEndNotify";
        case 0x171:
            return "AcCmdRCAwardNotify";
        case 0x172:
            return "AcCmdRCAwardEnd";
        case 0x181:
            return "AcCmdRCTriggerActivate";
        case 0x240:
            return "AcCmdCRTriggerizeAct";
        case 0x193:
            return "AcCmdCRLoadingCompleteNotify";
        case 0x1a3:
            return "AcCmdRCChangeAIOwner";
        case 0x1b3:
            return "AcCmdRCRoomCountdown";
        case 0x1c8:
            return "AcCmdCRRaceResultOK";
        case 0x1c9:
            return "AcCmdCRRaceResultCancel";
        case 0x1ca:
            return "AcCmdRCRoomCountdownCancel";
        case 0x1d3:
            return "AcCmdRCResetPos";
        case 0x1f1:
            return "AcCmdRCUpdateGameMoney";
        case 0x1dd:
            return "AcCmdCRMountFamilyTreeCancel";
        case 0x1ff:
            return "AcCmdRCGuildModeStar";
        case 0x203:
            return "AcCmdCRAchievementDetailCancel";
        case 0x152:
            return "AcCmdCRSetKeyAchievementOK";
        case 0x153:
            return "AcCmdCRSetKeyAchievementCancel";
        case 0x209:
            return "AcCmdCRMountInjuryHealOK";
        case 0x20a:
            return "AcCmdCRMountInjuryHealCancel";
        case 0x210:
            return "AcCmdCREmblemListCancel";
        case 0x212:
            return "AcCmdCRSetKeyEmblemOK";
        case 0x213:
            return "AcCmdCRSetKeyEmblemCancel";
        case 0x214:
            return "AcCmdCRSetKeyEmblemNotify";
        case 0xe5:
            return "AcCmdRCAchievementUpdateNotify";
        case 0x279:
            return "AcCmdCRCreateGuildOK";
        case 0x27a:
            return "AcCmdCRCreateGuildCancel";
        case 0x27f:
            return "AcCmdCRWithdrawGuildMemberOK";
        case 0x280:
            return "AcCmdCRWithdrawGuildMemberCancel";
        case 0x292:
            return "AcCmdCRGuildMemberListCancel";
        case 0x297:
            return "AcCmdCRUpdateGuildMemberGradeOK";
        case 0x298:
            return "AcCmdCRUpdateGuildMemberGradeCancel";
        case 0x29e:
            return "AcCmdCRRequestGuildInfoCancel";
        case 0x2a8:
            return "AcCmdRCWithdrawGuildMemberNotify";
        case 0x2aa:
            return "AcCmdRCUpdateGuildMemberGradeNotify";
        case 0x2ae:
            return "AcCmdRCModifyGuildEmblemNotify";
        case 0x2b0:
            return "AcCmdCRRelayCommandNotify";
        case 0x1b5:
            return "AcCmdCRUseItemOK";
        case 0x1b6:
            return "AcCmdCRUseItemCancel";
        case 0x2cd:
            return "AcCmdRCMagicExpire";
        case 0x2e8:
            return "AcCmdCRRegisterDailyQuestGroupOK";
        case 0x2e9:
            return "AcCmdCRRegisterDailyQuestGroupCancel";
        case 0x2ee:
            return "AcCmdCRUpdateDailyQuestOK";
        case 0x2ef:
            return "AcCmdCRUpdateDailyQuestCancel";
        case 0x2f4:
            return "AcCmdCRGiveupDailyQuestOK";
        case 0x2f5:
            return "AcCmdCRGiveupDailyQuestCancel";
        case 0x305:
            return "AcCmdRCUpdateDailyQuestNotify";
        case 0x306:
            return "AcCmdRCCompleteDailyQuestNotify";
        case 0x38d:
            return "AcCmdCRRegisterQuestOK";
        case 0x38e:
            return "AcCmdCRRegisterQuestCancel";
        case 0x393:
            return "AcCmdCRGiveupQuestOK";
        case 0x394:
            return "AcCmdCRGiveupQuestCancel";
        case 0x3a4:
            return "AcCmdRCUpdateQuestNotify";
        case 0x31b:
            return "AcCmdRCUpdateLeagueScoreNotify";
        case 0x31e:
            return "AcCmdRCUpdateLeagueGradeNotify";
        case 0x327:
            return "AcCmdCRRequestLeagueTeamListCancel";
        case 0x33e:
            return "AcCmdRCGameCreateClientItem";
        case 0x344:
            return "AcCmdRCObtainEgg";
        case 0x3aa:
            return "AcCmdRCGuildRaceInfo";
        case 0x3ac:
            return "AcCmdRCGuildRaceResult";
        case 0x3b0:
            return "AcCmdCRRequestGuildMatchInfoCancel";
        case 0x3c5:
            return "AcCmdCRRequestGuildRankingInfoCancel";
        case 0x3c8:
            return "AcCmdCRRequestGuildRankingInfoListCancel";
        case 0x3f8:
            return "AcCmdRCObstacleStatus";
        case 0x405:
            return "AcCmdCRChangeAgeOK";
        case 0x406:
            return "AcCmdCRChangeAgeCancel";
        case 0x40c:
            return "AcCmdCRHideAgeOK";
        case 0x40d:
            return "AcCmdCRHideAgeCancel";
        case 0x42b:
            return "AcCmdCRAddAIPlayerOK";
        case 0x42e:
            return "AcCmdCRRemoveAIPlayerOK";
        case 0x430:
            return "AcCmdRCAIPlayerAction";
        case 0x532:
            return "AcCmdRCUpdateLicenseInfo";
        case 0x15a:
            return "AcCmdCRRecoverMountOK";
        case 0x15b:
            return "AcCmdCRRecoverMountCancel";
        case 0x1ea:
            return "AcCmdCRChangeMagicTarget";
        case 0x1f7:
            return "AcCmdCRSkillSystemEvent";
        case 0x30:
            return "AcCmdCREnterRoom";
        case 0x1024:
            return "AcCmdUserRaceTimer";
        case 0x9f:
            return "AcCmdCRHeartbeat";
        case 0x192:
            return "AcCmdCRLoadingComplete";
        case 0xce:
            return "AcCmdCRTriggerLevelDevice";
        case 0x10a3:
            return "AcCmdUserRaceItemGet";
        case 0x4f:
            return "AcCmdCRNPCAttach";
        case 0x5e:
            return "AcCmdCRKick";
        case 0x58:
            return "AcCmdCRReadyRace";
        case 0x1eb:
            return "AcCmdCRChangeMagicTargetOK";
        case 0x1ec:
            return "AcCmdCRChangeMagicTargetCancel";
        case 0x1ed:
            return "AcCmdCRChangeMagicTargetNotify";
        case 0x1ee:
            return "AcCmdRCRemoveMagicTarget";
        case 0x1fe:
            return "AcCmdRCSkillSystemEvent";
        case 0x202:
            return "AcCmdCRAchievementDetailOK";
        case 0x2b2:
            return "AcCmdCRRelayNotify";
        case 0x109d:
            return "AcCmdGameRaceClientUDPInfo";
        case 0x109f:
            return "AcCmdGameRaceP2PResult";
        case 0xa4:
            return "AcCmdCRUseItemSlotOK";
        case 0xa6:
            return "AcCmdCRUseItemSlotNotify";
        case 0x286:
            return "AcCmdCRInviteGuildJoinCancel";
        case 0x2ac:
            return "AcCmdRCAcceptGuildJoinNotify";
        case 0x4b:
            return "AcCmdCRAttackNPC";
        case 0x5a:
            return "AcCmdCRStartRace";
        case 0x2be:
            return "AcCmdServerStatsBase";
        case 0x53:
            return "AcCmdCRChatNotify";
        case 0x61:
            return "AcCmdCRWhisperNotify";
        case 0xbe:
            return "AcCmdRCMobAddMob";
        case 0xca:
            return "AcCmdRCMobSetKey";
        case 0xcb:
            return "AcCmdRCMobClearKey";
        case 0x1bb:
            return "AcCmdRCUpdateMountInfoNotify";
        case 0x2c1:
            return "AcCmdCRServerStatsNotify";
        case 0x308:
            return "AcCmdCRRequestUserOK";
        case 0x309:
            return "AcCmdCRRequestUserCancel";
        case 0x310:
            return "AcCmdRCRequestUser";
        case 0x317:
            return "AcCmdCRInviteUserOK";
        case 0x318:
            return "AcCmdCRInviteUserCancel";
        case 0x52:
            return "AcCmdCRChat";
        case 0x55:
            return "AcCmdCRChangeRoomOptionsNotify";
        case 0x13d:
            return "AcCmdCRUpdateEquipmentNotify";
        case 0x24c:
            return "AcCmdCROpCmdOK";
        case 0xf9:
            return "AcCmdRCMobLinkTo";
        case 0x207:
            return "AcCmdRCDebugMessage";
        case 0x20f:
            return "AcCmdCREmblemListOK";
        case 0x243:
            return "AcCmdRCSupplyItemInsert";
        case 0x29d:
            return "AcCmdCRRequestGuildInfoOK";
        case 0x2d4:
            return "AcCmdUpdateEnumValueBaseclass_AcDataByteListTemplate<struct_TEnumValueChanged<enum_eRaceConfig>,5>,724>";
        case 0x2d5:
            return "AcCmdUpdateEnumValueBaseclass_AcDataByteListTemplate<struct_TEnumValueChanged<enum_eRaceConfig>,5>,725>";
        case 0x2d7:
            return "AcCmdUpdateEnumValueBaseclass_AcDataByteListTemplate<struct_TEnumValueChanged<enum_ePlayerConfig>,11>,727>";
        case 0x2d8:
            return "AcCmdUpdateEnumValueBaseclass_AcDataByteListTemplate<struct_TEnumValueChanged<enum_ePlayerConfig>,11>,728>";
        case 0x33d:
            return "AcCmdRCExchangeItem";
        case 0x338:
            return "AcCmdRCUpdatePet";
        case 0x3af:
            return "AcCmdCRRequestGuildMatchInfoOK";
        case 0x3c4:
            return "AcCmdCRRequestGuildRankingInfoOK";
        case 0x1af:
            return "AcCmdRCUpdateMountAppearanceNotify";
        case 0x3dc:
            return "AcCmdRCResetItemWeekly";
        case 0x54:
            return "AcCmdCRChangeRoomOptions";
        case 0x31:
            return "AcCmdCREnterRoomNotify";
        case 0x5b:
            return "AcCmdCRStartRaceNotify";
        case 0x3c2:
            return "AcCmdRCUpdateSpecialEventNotify";
        case 0x501:
            return "AcCmdCRUpdateRaceBonusOK";
        case 0x291:
            return "AcCmdCRGuildMemberListOK";
        case 0x326:
            return "AcCmdCRRequestLeagueTeamListOK";
        case 0x32:
            return "AcCmdCREnterRoomOK";
        case 0x1dc:
            return "AcCmdCRMountFamilyTreeOK";
        case 0x313:
            return "AcCmdUpdateEnumValueBaseclass_AcDataByteListTemplate<struct_TEnumStringValueChanged<int>,20>,787>";
        case 0x38b:
            return "AcCmdCRUserPetInfosOK";
        case 0x3c7:
            return "AcCmdCRRequestGuildRankingInfoListOK";
        case 0x19f:
            return "AcCmdRCRaceResultNotify";
        default:
            return nullptr;
    }
}